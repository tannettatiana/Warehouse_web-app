get.user = SELECT USER_ID, ROLE_NAME, IS_BLOCKED, LOGIN FROM USERS JOIN ROLE ON USER_ROLE = ROLE_ID WHERE LOGIN =? AND USER_PASSWORD =? AND IS_DELETED = 0
get.driver.enter.requests = SELECT ENTER_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM ENTER_REQUESTS WHERE DRIVER =? AND STATUS =?
get.driver.load.requests = SELECT LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM LOAD_REQUESTS WHERE (DRIVER =? AND LOAD_TYPE =?) AND STATUS =?
get.user.role = SELECT ROLE_NAME FROM ROLE WHERE ROLE_ID =?
get.user.role.id = SELECT ROLE_ID FROM ROLE WHERE ROLE_NAME =?
get.users.all = SELECT USER_ID, LOGIN, USER_PASSWORD, USER_ROLE, IS_BLOCKED, IS_AUTHORIZED FROM USERS WHERE IS_DELETED = 0
get.users.authorized = SELECT USER_ID, LOGIN, USER_PASSWORD, USER_ROLE, IS_BLOCKED, IS_AUTHORIZED FROM USERS WHERE IS_AUTHORIZED = 1 AND IS_DELETED = 0
get.users.logins = SELECT LOGIN FROM USERS WHERE LOGIN <> 'admin' AND IS_DELETED = 0
get.request.product = SELECT PRODUCT_NAME FROM PRODUCTS WHERE PRODUCT_ID =?
get.car.numbers = SELECT CAR_NUMBER FROM CARS
get.products.name = SELECT PRODUCT_NAME FROM PRODUCTS WHERE STATUS <> 'deleted'
get.product.id = SELECT PRODUCT_ID FROM PRODUCTS WHERE PRODUCT_NAME =?
get.roles = SELECT ROLE_NAME FROM ROLE
delete.user = UPDATE USERS SET IS_DELETED = 1 WHERE LOGIN =?
add.user = INSERT INTO USERS (USER_ID, LOGIN, USER_PASSWORD, USER_ROLE, IS_BLOCKED, IS_AUTHORIZED, IS_DELETED) VALUES (USERS_SEQUENCE.NEXTVAL, ?, ?, ?, 0, 0, 0)
add.enter.request = INSERT INTO ENTER_REQUESTS (ENTER_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, REQUEST_TIME) VALUES (ENTER_REQUESTS_SEQUENCE.NEXTVAL, ?, ?, 'sent', LOCALTIMESTAMP)
add.load.request = INSERT INTO LOAD_REQUESTS (LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, REQUEST_TIME) VALUES (LOAD_REQUESTS_SEQUENCE.NEXTVAL, ?, ?, 'sent', ?, ?, LOCALTIMESTAMP)
find.user.login = SELECT USER_ID FROM USERS WHERE LOGIN =?
find.enter.request = SELECT ENTER_REQUEST_ID FROM ENTER_REQUESTS WHERE DRIVER =? AND CAR_NUMBER =? AND STATUS =?
find.load.request = SELECT LOAD_REQUEST_ID FROM LOAD_REQUESTS WHERE DRIVER =? AND CAR_NUMBER =? AND PRODUCT =? AND STATUS =?
set.authorizing.status = UPDATE USERS SET IS_AUTHORIZED =? WHERE USER_ID =?
view.product = SELECT * FROM PRODUCTS WHERE STATUS = 'in storage'
view.users.active = SELECT USER_ID, LOGIN, USER_PASSWORD, USER_ROLE, IS_BLOCKED, IS_AUTHORIZED FROM USERS WHERE IS_BLOCKED = 0 AND IS_DELETED = 0 AND USER_ROLE <> 1 AND USER_ROLE <> 2
view.users.blocked = SELECT USER_ID, LOGIN, USER_PASSWORD, USER_ROLE, IS_BLOCKED, IS_AUTHORIZED FROM USERS WHERE IS_BLOCKED = 1 AND IS_DELETED = 0 AND USER_ROLE <> 1 AND USER_ROLE <> 2
view.enter.requests = SELECT ENTER_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM ENTER_REQUESTS WHERE STATUS = 'sent'
warehouseman.view.load.requests = SELECT LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM LOAD_REQUESTS WHERE (STATUS = 'sent') AND LOAD_TYPE = 'loading'
warehouseman.view.load.requests.history = SELECT LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM LOAD_REQUESTS WHERE (STATUS = 'approved' OR STATUS = 'not approved') AND LOAD_TYPE = 'loading'
warehouseman.view.unload.requests = SELECT LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM LOAD_REQUESTS WHERE (STATUS = 'sent') AND LOAD_TYPE = 'unloading'
warehouseman.view.unload.requests.history = SELECT LOAD_REQUEST_ID, DRIVER, CAR_NUMBER, STATUS, PRODUCT, LOAD_TYPE, TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24:MI:SS') FROM LOAD_REQUESTS WHERE (STATUS = 'approved' OR STATUS = 'not approved') AND LOAD_TYPE = 'unloading'
warehouseman.view.drivers = SELECT DISTINCT USER_ID AS DRIVER, LOGIN, CAR_NUMBER FROM ENTER_REQUESTS JOIN USERS ON DRIVER = USER_ID WHERE STATUS = 'active'
warehouseman.add.product = INSERT INTO PRODUCTS (PRODUCT_ID, PRODUCT_NAME, STATUS) VALUES (PRODUCTS_SEQUENCE.NEXTVAL, ?, 'in storage')
warehouseman.disactive.enter.request = UPDATE ENTER_REQUESTS SET STATUS = 'inactive' WHERE DRIVER =? AND STATUS = 'active'
moder.delete.product = UPDATE PRODUCTS SET STATUS = 'deleted' WHERE PRODUCT_NAME =?
moder.block.user = UPDATE USERS SET IS_BLOCKED = ? WHERE USER_ID = ?
warehouseman.approve.enter.request = UPDATE ENTER_REQUESTS SET STATUS = 'active' WHERE ENTER_REQUEST_ID = ?
warehouseman.reject.enter.request = UPDATE ENTER_REQUESTS SET STATUS = 'inactive' WHERE ENTER_REQUEST_ID = ?
warehouseman.approve.load.request = UPDATE LOAD_REQUESTS SET STATUS = 'approved' WHERE LOAD_REQUEST_ID = ?
warehouseman.reject.load.request = UPDATE LOAD_REQUESTS SET STATUS = 'not approved' WHERE LOAD_REQUEST_ID = ?
change.product.status = UPDATE PRODUCTS SET STATUS =? WHERE PRODUCT_ID = (SELECT PRODUCT FROM LOAD_REQUESTS WHERE LOAD_REQUEST_ID =?)
get.request.by.product = SELECT * FROM LOAD_REQUESTS WHERE (STATUS = 'sent' OR STATUS = 'approved') AND PRODUCT = (SELECT PRODUCT_ID FROM PRODUCTS WHERE PRODUCT_NAME =?)
find.product.name = SELECT PRODUCT_ID FROM PRODUCTS WHERE PRODUCT_NAME =?
find.sent.enter.request = SELECT ENTER_REQUEST_ID FROM ENTER_REQUESTS WHERE DRIVER =? AND STATUS ='active' 
warehouseman.view.enter.request.history = SELECT * FROM ENTER_REQUESTS WHERE (STATUS = 'active' OR STATUS = 'inactive')
get.user.blocking.status = SELECT USER_ID, ROLE_NAME, IS_BLOCKED, LOGIN FROM USERS JOIN ROLE ON USER_ROLE = ROLE_ID WHERE USER_ID = ?